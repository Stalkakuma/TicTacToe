{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"wNAIA,SAASA,EAAOC,GACZ,OACF,wBACAC,UAAU,SACVC,QAASF,EAAME,QAFf,SAGOF,EAAMG,Q,IAKTC,E,kKAEJ,SAAaC,GAAI,IAAD,OACd,OACH,cAACN,EAAD,CACGI,MAAOG,KAAKN,MAAMO,QAAQF,GACvBH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,oBAKvC,WACE,OACE,gCAEE,sBAAKJ,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,a,GA5BTC,IAAMC,WAmCpBC,E,kDACJ,WAAYX,GAAQ,IAAD,8BAClB,cAAMA,IACDY,MAAQ,CACZC,QAAS,CAAC,CACTN,QAASO,MAAM,GAAGC,KAAK,QAExBC,WAAY,EACZC,SAAS,GAPQ,E,+CAWnB,SAAYZ,GACT,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQK,MACtC,EAAGZ,KAAKM,MAAMI,WAAa,GAErBT,EADUM,EAAQA,EAAQM,OAAS,GACjBZ,QAAQW,QAC5BE,EAAgBb,IAAYA,EAAQF,KAGxCE,EAAQF,GAAKC,KAAKM,MAAMK,QAAU,IAAM,IACxCX,KAAKe,SAAS,CACbR,QAASA,EAAQS,OAAO,CAAC,CACzBf,QAASA,KAETS,WAAYH,EAAQM,OACpBF,SAAUX,KAAKM,MAAMK,a,oBAIvB,SAAOM,GACNjB,KAAKe,SAAS,CACbL,WAAYO,EACZN,QAAUM,EAAO,IAAO,M,oBAGzB,WAAU,IAgBLC,EAhBI,OACFX,EAAUP,KAAKM,MAAMC,QACrBY,EAAUZ,EAAQP,KAAKM,MAAMI,YAC7BU,EAASN,EAAgBK,EAAQlB,SAEjCoB,EAAQd,EAAQe,KAAI,SAACL,EAAMM,GAChC,IAAMC,EAAOD,EACb,eAAiBA,EACjB,mBACA,OACA,6BACG,wBAAQ3B,QAAS,kBAAM,EAAK6B,OAAOF,IAAnC,SACDC,KAFOD,MAaT,OALAL,EADGE,EACM,WAAaA,EAEb,iBAAmBpB,KAAKM,MAAMK,QACvC,IAAM,KAGJ,sBAAKhB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,CACGG,QAASkB,EAAQlB,QAC1BL,QAAS,SAACG,GAAD,OAAO,EAAK2B,YAAY3B,QAG7B,sBAAKJ,UAAU,YAAf,UACE,8BAAMuB,IACN,6BAAKG,c,GArEIlB,IAAMC,WA4EzB,SAASU,EAAgBb,GAWtB,IAVF,IAAM0B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACJ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAED5B,EAAI,EAAGA,EAAI4B,EAAMd,OAAQd,IAAI,CACrC,kBAAkB4B,EAAM5B,GAAxB,GAAO6B,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAI7B,EAAQ2B,IAAM3B,EAAQ2B,KAAO3B,EAAQ4B,IACzC5B,EAAQ2B,KAAO3B,EAAQ6B,GACtB,OAAO7B,EAAQ2B,GAGjB,OAAO,KAKVG,IAASC,OACP,cAAC3B,EAAD,IACA4B,SAASC,eAAe,W","file":"static/js/main.2293b7b1.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n    return (\r\n  <button \r\n  className=\"square\" \r\n  onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n\t\r\n  renderSquare(i) {\r\n    return (\r\n\t<Square\r\n\t   value={this.props.squares[i]}\r\n       onClick={() => this.props.onClick(i)}\r\n\t   />\r\n\t   );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        \r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n\t  super(props);\r\n\t  this.state = {\r\n\t\t  history: [{\r\n\t\t\t  squares: Array(9).fill(null),\r\n\t\t  }],\r\n\t\t  stepNumber: 0,\r\n\t\t  xIsNext: true,\r\n\t  };\r\n  }\r\n  \r\n  handleClick(i) {\r\n\t    const history = this.state.history.slice(\r\n\t\t0, this.state.stepNumber + 1);\r\n\t\tconst current = history[history.length - 1];\r\n\t\tconst squares = current.squares.slice();\r\n\t\tif (calculateWinner(squares) || squares[i]) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsquares[i] = this.state.xIsNext ? 'X' : 'O';\r\n\t\tthis.setState({\r\n\t\t\thistory: history.concat([{\r\n\t\t\tsquares: squares,\r\n\t\t\t}]),\r\n\t\t\tstepNumber: history.length,\r\n\t\t\txIsNext: !this.state.xIsNext,\r\n\t\t});\r\n\t}\r\n\t\r\n\tjumpTo(step) {\r\n\t\tthis.setState({\r\n\t\t\tstepNumber: step,\r\n\t\t\txIsNext: (step % 2) === 0,\r\n\t\t});\r\n\t}\r\n  render() {\r\n\t  const history = this.state.history;\r\n\t  const current = history[this.state.stepNumber];\r\n\t  const winner = calculateWinner(current.squares);\r\n\t  \r\n\t  const moves = history.map((step, move) => {\r\n\t\t  const desc = move ?\r\n\t\t  'Go to move #' + move :\r\n\t\t  'Go to game start';\r\n\t\t  return (\r\n\t\t  <li key={move}>\r\n\t\t     <button onClick={() => this.jumpTo(move)}>\r\n\t\t\t\t {desc}</button>\r\n\t\t\t\t </li>\r\n\t\t\t\t );\r\n\t  });\r\n\t  let status;\r\n\t  if (winner) {\r\n\t\t  status = 'Winner: ' + winner;\r\n\t  } else {\r\n\t\t  status = 'Next player: ' + (this.state.xIsNext ?\r\n\t\t  'X' : 'O');\r\n\t  }\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n             squares={current.squares}\r\n\t\t\t onClick={(i) => this.handleClick(i)}\r\n\t\t  />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n\tconst lines = [\r\n\t  [0, 1, 2],\r\n\t  [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n\t  ];\r\n\t  for (let i = 0; i < lines.length; i++){\r\n\t\t  const [a, b, c] = lines[i];\r\n\t\t  if (squares[a] && squares[a] === squares[b] &&\r\n\t\t  squares[a] === squares[c]) {\r\n\t\t\t  return squares[a];\r\n\t\t  }\r\n\t  }\r\n\t  return null;\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}